{"version":3,"sources":["serviceWorker.js","pages/Home.jsx","pages/About.jsx","pages/Contact.jsx","pages/Projects.jsx","pages/UnknownPage.jsx","Routes.js","components/Navigation.jsx","components/Header.jsx","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Home","react_default","a","createElement","Projects","Contact","UnknownPage","Routes","react_router","exact","path","component","About","Navigation","Nav","className","Link","as","NavLink","to","Header","Navbar","expand","sticky","Brand","Toggle","aria-controls","Collapse","id","components_Navigation","App","Container","Row","components_Header","src_Routes","Col","Component","ReactDOM","render","react_router_dom","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"sMAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,uICdSC,EAFF,kBAAMC,EAAAC,EAAAC,cAAA,iCCEJC,EAFE,kBAAMH,EAAAC,EAAAC,cAAA,mCCERE,EAFC,kBAAMJ,EAAAC,EAAAC,cAAA,oCCEPC,EAFE,kBAAMH,EAAAC,EAAAC,cAAA,sCCERG,EAFK,kBAAML,EAAAC,EAAAC,cAAA,qDCmBXI,EAZA,kBACdN,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACCP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjCC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWC,IAChCX,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWN,IAClCJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWP,IACnCH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOG,UAAWL,uBCUNO,EAtBI,kBAClBZ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKC,UAAU,WACdd,EAAAC,EAAAC,cAACW,EAAA,EAAD,KAECb,EAAAC,EAAAC,cAACW,EAAA,EAAIE,KAAL,CAAUC,GAAIC,IAASC,GAAG,IAAIV,OAAK,GAAnC,QAGAR,EAAAC,EAAAC,cAACW,EAAA,EAAIE,KAAL,CAAUC,GAAIC,IAASC,GAAG,UAA1B,SAGAlB,EAAAC,EAAAC,cAACW,EAAA,EAAIE,KAAL,CAAUC,GAAIC,IAASC,GAAG,YAA1B,WAGAlB,EAAAC,EAAAC,cAACW,EAAA,EAAIE,KAAL,CAAUC,GAAIC,IAASC,GAAG,aAA1B,gBCHWC,EAZA,kBACdnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAQC,OAAO,KAAKC,OAAO,OAC1BtB,EAAAC,EAAAC,cAACkB,EAAA,EAAOG,MAAR,KACCvB,EAAAC,EAAAC,cAAA,iCAEDF,EAAAC,EAAAC,cAACkB,EAAA,EAAOI,OAAR,CAAeC,gBAAc,qBAC7BzB,EAAAC,EAAAC,cAACkB,EAAA,EAAOM,SAAR,CAAiBC,GAAG,oBACnB3B,EAAAC,EAAAC,cAAC0B,EAAD,SCeYC,mLAlBb,OACC7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACC9B,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACC/B,EAAAC,EAAAC,cAAC8B,EAAD,OAEDhC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACC/B,EAAAC,EAAAC,cAAC+B,EAAD,OAEDjC,EAAAC,EAAAC,cAAC6B,EAAA,EAAD,KACC/B,EAAAC,EAAAC,cAACgC,EAAA,EAAD,KACClC,EAAAC,EAAAC,cAAA,+BAZYiC,yBCGlBC,IAASC,OACRrC,EAAAC,EAAAC,cAACoC,EAAA,EAAD,KACCtC,EAAAC,EAAAC,cAACqC,EAAD,OAEDC,SAASC,eAAe,SVqHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3e84e7a0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nconst Home = () => <div>Home Page content</div>;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Projects = () => <div>Abouts page content</div>;\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\n\r\nconst Contact = () => <div>Contact Page content</div>;\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nconst Projects = () => <div>Project's Page content</div>;\r\n\r\nexport default Projects;\r\n","import React from 'react';\n\nconst UnknownPage = () => <div>404 - Sorry this pages does not exist</div>;\n\nexport default UnknownPage;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home.jsx';\nimport About from './pages/About.jsx';\nimport Contact from './pages/Contact.jsx';\nimport Projects from './pages/Projects.jsx';\nimport UnknownPage from './pages/UnknownPage.jsx';\n\nconst Routes = () => (\n\t<main>\n\t\t<Switch>\n\t\t\t<Route exact path='/' component={Home} />\n\t\t\t<Route path='/about' component={About} />\n\t\t\t<Route path='/contact' component={Contact} />\n\t\t\t<Route path='/projects' component={Projects} />\n\t\t\t<Route component={UnknownPage} />\n\t\t</Switch>\n\t</main>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { Nav } from 'react-bootstrap';\n\nconst Navigation = () => (\n\t<div>\n\t\t<Nav className='mr-auto'>\n\t\t\t<Nav>\n\t\t\t\t{/* \"NavLink\" here since \"active\" class styling is needed */}\n\t\t\t\t<Nav.Link as={NavLink} to='/' exact>\n\t\t\t\t\tHome\n\t\t\t\t</Nav.Link>\n\t\t\t\t<Nav.Link as={NavLink} to='/about'>\n\t\t\t\t\tAbout\n\t\t\t\t</Nav.Link>\n\t\t\t\t<Nav.Link as={NavLink} to='/contact'>\n\t\t\t\t\tContact\n\t\t\t\t</Nav.Link>\n\t\t\t\t<Nav.Link as={NavLink} to='/projects'>\n\t\t\t\t\tProjects\n\t\t\t\t</Nav.Link>\n\t\t\t</Nav>\n\t\t</Nav>\n\t</div>\n);\n\nexport default Navigation;\n","import React from 'react';\r\nimport { Navbar } from 'react-bootstrap';\r\nimport Navigation from './Navigation.jsx';\r\nconst Header = () => (\r\n\t<Navbar expand='lg' sticky='top'>\r\n\t\t<Navbar.Brand>\r\n\t\t\t<h1>Andrew's Portfolio</h1>\r\n\t\t</Navbar.Brand>\r\n\t\t<Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n\t\t<Navbar.Collapse id='basic-navbar-nav'>\r\n\t\t\t<Navigation />\r\n\t\t</Navbar.Collapse>\r\n\t</Navbar>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Routes from './Routes';\nimport Header from './components/Header';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Container>\n\t\t\t\t<Row>\n\t\t\t\t\t<Header />\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Routes />\n\t\t\t\t</Row>\n\t\t\t\t<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<div>Footer</div>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './style/index.css';\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}