{"version":3,"sources":["pages/Home.jsx","pages/About.jsx","pages/Contact.jsx","pages/Projects.jsx","pages/UnknownPage.jsx","Routes.js","components/Navigation.js","components/Header.jsx","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","Projects","Contact","UnknownPage","Routes","react_router","exact","path","component","About","Navigation","react_router_dom","to","Header","components_Navigation","Footer","Component","App","className","components_Header","src_Routes","components_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oRAIeA,EAFF,kBAAMC,EAAAC,EAAAC,cAAA,iCCEJC,EAFE,kBAAMH,EAAAC,EAAAC,cAAA,sCCERE,EAFC,kBAAMJ,EAAAC,EAAAC,cAAA,oCCEPC,EAFE,kBAAMH,EAAAC,EAAAC,cAAA,sCCERG,EAFK,kBAAML,EAAAC,EAAAC,cAAA,qDCmBXI,EAZA,kBACdN,EAAAC,EAAAC,cAAA,YACCF,EAAAC,EAAAC,cAACK,EAAA,EAAD,KACCP,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWX,IACjCC,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOE,KAAK,SAASC,UAAWC,IAChCX,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOE,KAAK,WAAWC,UAAWN,IAClCJ,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOE,KAAK,YAAYC,UAAWP,IACnCH,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAOG,UAAWL,OCMNO,EAnBI,kBAClBZ,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAG,KAAT,SAEDd,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAG,UAAT,UAEDd,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAG,YAAT,YAEDd,EAAAC,EAAAC,cAAA,UACCF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMC,GAAG,aAAT,gBCNWC,EAPA,kBACdf,EAAAC,EAAAC,cAAA,WACCF,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACc,EAAD,QCEaC,mLAJb,OAAOjB,EAAAC,EAAAC,cAAA,+BAFYgB,aCgBNC,mLAVb,OACCnB,EAAAC,EAAAC,cAAA,OAAKkB,UAAU,OACdpB,EAAAC,EAAAC,cAACmB,EAAD,MACArB,EAAAC,EAAAC,cAACoB,EAAD,MACAtB,EAAAC,EAAAC,cAACqB,EAAD,cANcL,aCMEM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACR9B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACCb,EAAAC,EAAAC,cAAC6B,EAAD,OAEDC,SAASC,eAAe,SDsHnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a3303265.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Home = () => <div>Home Page content</div>;\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst Projects = () => <div>Project's page content</div>;\r\n\r\nexport default Projects;\r\n","import React from 'react';\r\n\r\nconst Contact = () => <div>Contact Page content</div>;\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\n\r\nconst Projects = () => <div>Project's Page content</div>;\r\n\r\nexport default Projects;\r\n","import React from 'react';\n\nconst UnknownPage = () => <div>404 - Sorry this pages does not exist</div>;\n\nexport default UnknownPage;\n","import React from 'react';\n\nimport { Switch, Route } from 'react-router-dom';\nimport Home from './pages/Home.jsx';\nimport About from './pages/About.jsx';\nimport Contact from './pages/Contact.jsx';\nimport Projects from './pages/Projects.jsx';\nimport UnknownPage from './pages/UnknownPage.jsx';\n\nconst Routes = () => (\n\t<main>\n\t\t<Switch>\n\t\t\t<Route exact path='/' component={Home} />\n\t\t\t<Route path='/about' component={About} />\n\t\t\t<Route path='/contact' component={Contact} />\n\t\t\t<Route path='/projects' component={Projects} />\n\t\t\t<Route component={UnknownPage} />\n\t\t</Switch>\n\t</main>\n);\n\nexport default Routes;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nconst Navigation = () => (\n\t<nav>\n\t\t<ul>\n\t\t\t<li>\n\t\t\t\t<Link to='/'>Home</Link>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<Link to='/about'>About</Link>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<Link to='/contact'>Contact</Link>\n\t\t\t</li>\n\t\t\t<li>\n\t\t\t\t<Link to='/projects'>Projects</Link>\n\t\t\t</li>\n\t\t</ul>\n\t</nav>\n);\n\nexport default Navigation;\n","import React from 'react';\r\nimport Navigation from './Navigation';\r\n\r\nconst Header = () => (\r\n\t<div>\r\n\t\t<h1>Website Title</h1>\r\n\t\t<Navigation />\r\n\t</div>\r\n);\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n\trender() {\n\t\treturn <footer>Footer</footer>;\n\t}\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport './style/App.css';\nimport Routes from './Routes';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<div className='App'>\n\t\t\t\t<Header />\n\t\t\t\t<Routes />\n\t\t\t\t<Footer />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport './style/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<Router>\n\t\t<App />\n\t</Router>,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}